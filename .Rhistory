Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Names <- "John Andrew Thomas"
list_N <- strsplit(Names, split = ' ')[[1]]
paste(list_N, '@gmail.com', sep = '', collapse = ';')
Names <- "John Andrew Thomas"
list_N <- strsplit(Names, split = ' ')[[1]]
paste(list_N, '@gmail.com', sep = '', collapse = ' ; ')
Median_AD = function(vec) {
m = (abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = abs(vec - median(vec))
return(m)
}
Median_AD(1:15)
Median_AD = function(vec) {
m = median(abs(vec - median(vec)))
return(m)
}
Median_AD(1:15)
rep(abc, 5)
rep(abc, each = 5)
paste(x, y)```
abc = c('a', 'b', 'c', 'd', 'e')
x = rep(abc, 5)
y = rep(abc, each = 5)
paste(x, y)
abc = c('a', 'b', 'c', 'd', 'e')
x = rep(abc, 5)
y = rep(abc, each = 5)
paste(x, y, sep = '')
alphabets = c('a', 'b', 'c', 'd', 'e')
double = rep(alphabets, each = 5)
paste(alphabets, double, sep = '')
variable.name = 5
variable.name
typeof(fruit)
help("typeof")
names(fruit)
names(fruit) <- c('a', 'b', 'c', 'd')
names(fruit)
typeof(names(fruit))
#3
babies %>% group_by(Name)
#1
babies <- tbl_df(read.table('names/yob2014.txt', header = FALSE, sep = ',', col.names = c('Name', 'Sex', 'Number')))
# Load dataset
library(ggplot2)
data %>% select(season, points) %>% ggplot(aes(x = points)) + geom_histogram()
load("Knicks.rda")
#1
ggplot(data = data) + aes(x = season, y = points/opp) + geom_boxplot()
#2
df <- data %>% group_by(visiting, season) %>% summarise(mean(points), mean(opp))
#1
babies <- tbl_df(read.table('names/yob2014.txt', header = FALSE, sep = ',', col.names = c('Name', 'Sex', 'Number')))
library(ggplot2)
library(dplyr)
# Load dataset
library(ggplot2)
data("cars")
#1
g <- ggplot(data = cars) + aes(x = dist, y = speed) + geom_point()
g
#2
g <- g + xlab("Speed (mpg)") + ylab("Stopping Distance (ft)") + ggtitle("Relationship of Distance and Speed in Cars")
#3
g + geom_point(aes(color = "red", shape = 'pch', size = 17))
#1
data("faithful")
faithful <- faithful %>% mutate(length = ifelse(eruptions < 3.2, "short", "long"))
#2
ggplot(data = faithful) + aes(x = length, y = waiting) + geom_boxplot()
#3
ggplot(data = faithful) + aes(x = waiting) + geom_density(aes(color = length))
#4
# Waiting time for short lenght eruption has a lower median compared to short length eruptions. There is an overlap of maximum waiting time and minimum waiting time between short and long eruptions, respectively. Both eruption types do not have any outliers.
load("Knicks.rda")
#1
ggplot(data = data) + aes(x = season, y = points/opp) + geom_boxplot()
#2
df <- data %>% group_by(visiting, season) %>% summarise(mean(points), mean(opp))
df
ggplot(data = data, aes(x = season)) + geom_bar(aes(fill = visiting))
#3
data %>% select(season, points) %>% ggplot(aes(x = points)) + geom_histogram()
#1
babies <- tbl_df(read.table('names/yob2014.txt', header = FALSE, sep = ',', col.names = c('Name', 'Sex', 'Number')))
#2
babies %>% select(Name, starts_with('K'), Number) %>% summarise(sum(Number))
#3
#3
babies %>% group_by(Name)
#3
babies %>% group_by(Sex)
#3
babies %>% group_by(Name) %>% summarise(n())
#3
babies %>% group_by(Name) %>% summarise(n = n()) %>% filter(n == 2)
#3
babies %>% group_by(Name, Sex) %>% summarise(n = n()) %>% filter(n == 2)
#3
babies %>% group_by(Name) %>% summarise(n = n()) %>% filter(n == 2)
#3
babies %>% group_by(Name)
#3
babies %>% group_by(Name) %>% summarise(n = n()) %>% filter(n == 2) %>% summarise(sum(n))
#3
babies %>% group_by(Name) %>% summarise(n = n()) %>% filter(n == 2) %>% summarise(total = sum(n))
head(babies)
#4
babies %>% filter(Number > 5000)
#4
babies %>% filter(Number > 5000, Number < 6000)
#4
babies %>% filter(Number > 5000, Number < 6000) %>% arrange(desc(Number))
?group_by
#5
babies %>% select(Name, starts_with('A'))
#5
babies %>% select(Name, starts_with('A', 'B'))
print(i
)
#5
for i in babies$Names {
print(i
)
babies$Name
#5
for (i in babies$Name) {
print(i)
}
shiny::runApp('~/Github/Shiny_App_Project/Drug_Overdose_App')
runApp('~/Github/Shiny_App_Project/Drug_Overdose_App')
data %>%
filter(Year == input$Year1, `Rate Type` == 'Opioid Overdose') %>% top_n(2)
data %>%
filter(Year == 2009, `Rate Type` == 'Opioid Overdose') %>% top_n(2)
rate <- data %>%
filter(Year == 2009, `Rate Type` == 'Opioid Overdose') %>% top_n(2)
rate$Rate
rate$Rate[2]
runApp('~/Github/Shiny_App_Project/Drug_Overdose_App')
runApp('~/Github/Shiny_App_Project/Drug_Overdose_App')
runApp('~/Github/Shiny_App_Project/Drug_Overdose_App')
setwd("~/Github/Shiny_App_Project")
# load library
library(tidyverse)
#load the dataset
data <- read_csv("Drug_Overdose.csv", col_names = TRUE)
View(data)
dim(data)
colnames(data)
data <- data %>% filter(Location != "District of Columbia")
data_opioid <- data %>% select(Location, "2009__Opioid Overdose Death Rate (Age-Adjusted)",
"2010__Opioid Overdose Death Rate (Age-Adjusted)",
"2011__Opioid Overdose Death Rate (Age-Adjusted)",
"2012__Opioid Overdose Death Rate (Age-Adjusted)",
"2013__Opioid Overdose Death Rate (Age-Adjusted)",
"2014__Opioid Overdose Death Rate (Age-Adjusted)",
"2015__Opioid Overdose Death Rate (Age-Adjusted)",
"2016__Opioid Overdose Death Rate (Age-Adjusted)",
"2017__Opioid Overdose Death Rate (Age-Adjusted)",
"2018__Opioid Overdose Death Rate (Age-Adjusted)")
data_opioid <- data_opioid %>%
gather(key = 'Year', value = 'Opioid Overdose Death Rate',
c("2009__Opioid Overdose Death Rate (Age-Adjusted)",
"2010__Opioid Overdose Death Rate (Age-Adjusted)",
"2011__Opioid Overdose Death Rate (Age-Adjusted)",
"2012__Opioid Overdose Death Rate (Age-Adjusted)",
"2013__Opioid Overdose Death Rate (Age-Adjusted)",
"2014__Opioid Overdose Death Rate (Age-Adjusted)",
"2015__Opioid Overdose Death Rate (Age-Adjusted)",
"2016__Opioid Overdose Death Rate (Age-Adjusted)",
"2017__Opioid Overdose Death Rate (Age-Adjusted)",
"2018__Opioid Overdose Death Rate (Age-Adjusted)"))
data_opioid <- separate(data_opioid, Year, c("Year", "value"), sep = '__') %>%  select(-value)
data_opioid$Year <- as.numeric(data_opioid$Year)
View(data_opioid)
data_all <- data %>% select(Location, "2009__All Drug Overdose Death Rate (Age-Adjusted)",
"2010__All Drug Overdose Death Rate (Age-Adjusted)",
"2011__All Drug Overdose Death Rate (Age-Adjusted)",
"2012__All Drug Overdose Death Rate (Age-Adjusted)",
"2013__All Drug Overdose Death Rate (Age-Adjusted)",
"2014__All Drug Overdose Death Rate (Age-Adjusted)",
"2015__All Drug Overdose Death Rate (Age-Adjusted)",
"2016__All Drug Overdose Death Rate (Age-Adjusted)",
"2017__All Drug Overdose Death Rate (Age-Adjusted)",
"2018__All Drug Overdose Death Rate (Age-Adjusted)")
data_all <- data_all %>% gather(key = 'Year', value = 'All Overdose Death Rate',
c("2009__All Drug Overdose Death Rate (Age-Adjusted)",
"2010__All Drug Overdose Death Rate (Age-Adjusted)",
"2011__All Drug Overdose Death Rate (Age-Adjusted)",
"2012__All Drug Overdose Death Rate (Age-Adjusted)",
"2013__All Drug Overdose Death Rate (Age-Adjusted)",
"2014__All Drug Overdose Death Rate (Age-Adjusted)",
"2015__All Drug Overdose Death Rate (Age-Adjusted)",
"2016__All Drug Overdose Death Rate (Age-Adjusted)",
"2017__All Drug Overdose Death Rate (Age-Adjusted)",
"2018__All Drug Overdose Death Rate (Age-Adjusted)"))
data_all <- separate(data_all, Year, c("Year", "value"), sep = '__') %>%  select(-value)
data_all$Year <- as.numeric(data_all$Year)
View(data_all)
joined <- inner_join(data_opioid, data_all, by = c("Year", "Location"))
View(joined)
joined$`Opioid Overdose Death Rate` <- as.numeric(joined$`Opioid Overdose Death Rate`)
joined$`All Overdose Death Rate` <- as.numeric(joined$`All Overdose Death Rate`)
class(joined$Year)
joined <- joined %>% gather(`Opioid Overdose Death Rate`,
`All Overdose Death Rate`,
key = "Death Rate Types",
value = 'Death Rates')
View(joined)
joined <- joined %>% mutate(`Death Rate Types` = ifelse(
`Death Rate Types` ==
'Opioid Overdose Death Rate',
'Opioid Overdose', 'Total Overdose'))
joined <- joined %>% rename(
`Rate Type` = `Death Rate Types`,
Rate = `Death Rates`)
joined <- joined %>% mutate(`Rate` = ifelse(
is.na(`Rate`) == TRUE, 0, `Rate`)
)
# Saving the cleaned version of the csv file
write_csv(joined, path = './Drug_Overdose_App/cleaned_data.csv')
setwd("~/Github/Shiny_App_Project/Drug_Overdose_App")
runApp()
runApp()
setwd("~/Github/Shiny_App_Project")
data <- read_csv("Drug_Overdose.csv", col_names = TRUE)
dim(data)
colnames(data)
data <- data %>% filter(Location != "District of Columbia")
data_opioid <- data %>% select(Location, "2009__Opioid Overdose Death Rate (Age-Adjusted)",
"2010__Opioid Overdose Death Rate (Age-Adjusted)",
"2011__Opioid Overdose Death Rate (Age-Adjusted)",
"2012__Opioid Overdose Death Rate (Age-Adjusted)",
"2013__Opioid Overdose Death Rate (Age-Adjusted)",
"2014__Opioid Overdose Death Rate (Age-Adjusted)",
"2015__Opioid Overdose Death Rate (Age-Adjusted)",
"2016__Opioid Overdose Death Rate (Age-Adjusted)",
"2017__Opioid Overdose Death Rate (Age-Adjusted)",
"2018__Opioid Overdose Death Rate (Age-Adjusted)")
data_opioid <- data_opioid %>%
gather(key = 'Year', value = 'Opioid Overdose Death Rate',
c("2009__Opioid Overdose Death Rate (Age-Adjusted)",
"2010__Opioid Overdose Death Rate (Age-Adjusted)",
"2011__Opioid Overdose Death Rate (Age-Adjusted)",
"2012__Opioid Overdose Death Rate (Age-Adjusted)",
"2013__Opioid Overdose Death Rate (Age-Adjusted)",
"2014__Opioid Overdose Death Rate (Age-Adjusted)",
"2015__Opioid Overdose Death Rate (Age-Adjusted)",
"2016__Opioid Overdose Death Rate (Age-Adjusted)",
"2017__Opioid Overdose Death Rate (Age-Adjusted)",
"2018__Opioid Overdose Death Rate (Age-Adjusted)"))
data_opioid <- separate(data_opioid, Year, c("Year", "value"), sep = '__') %>%  select(-value)
data_opioid$Year <- as.numeric(data_opioid$Year)
data_all <- data %>% select(Location, "2009__All Drug Overdose Death Rate (Age-Adjusted)",
"2010__All Drug Overdose Death Rate (Age-Adjusted)",
"2011__All Drug Overdose Death Rate (Age-Adjusted)",
"2012__All Drug Overdose Death Rate (Age-Adjusted)",
"2013__All Drug Overdose Death Rate (Age-Adjusted)",
"2014__All Drug Overdose Death Rate (Age-Adjusted)",
"2015__All Drug Overdose Death Rate (Age-Adjusted)",
"2016__All Drug Overdose Death Rate (Age-Adjusted)",
"2017__All Drug Overdose Death Rate (Age-Adjusted)",
"2018__All Drug Overdose Death Rate (Age-Adjusted)")
data_all <- data_all %>% gather(key = 'Year', value = 'All Overdose Death Rate',
c("2009__All Drug Overdose Death Rate (Age-Adjusted)",
"2010__All Drug Overdose Death Rate (Age-Adjusted)",
"2011__All Drug Overdose Death Rate (Age-Adjusted)",
"2012__All Drug Overdose Death Rate (Age-Adjusted)",
"2013__All Drug Overdose Death Rate (Age-Adjusted)",
"2014__All Drug Overdose Death Rate (Age-Adjusted)",
"2015__All Drug Overdose Death Rate (Age-Adjusted)",
"2016__All Drug Overdose Death Rate (Age-Adjusted)",
"2017__All Drug Overdose Death Rate (Age-Adjusted)",
"2018__All Drug Overdose Death Rate (Age-Adjusted)"))
data_all <- separate(data_all, Year, c("Year", "value"), sep = '__') %>%  select(-value)
data_all$Year <- as.numeric(data_all$Year)
joined <- inner_join(data_opioid, data_all, by = c("Year", "Location"))
joined$`Opioid Overdose Death Rate` <- as.numeric(joined$`Opioid Overdose Death Rate`)
joined$`All Overdose Death Rate` <- as.numeric(joined$`All Overdose Death Rate`)
class(joined$Year)
joined <- joined %>% gather(`Opioid Overdose Death Rate`,
`All Overdose Death Rate`,
key = "Death Rate Types",
value = 'Death Rates')
joined <- joined %>% mutate(`Death Rate Types` = ifelse(
`Death Rate Types` ==
'Opioid Overdose Death Rate',
'Opioid Overdose', 'All Overdose'))
joined <- joined %>% rename(
`Rate Type` = `Death Rate Types`,
Rate = `Death Rates`)
joined <- joined %>% mutate(`Rate` = ifelse(
is.na(`Rate`) == TRUE, 0, `Rate`)
)
# Saving the cleaned version of the csv file
write_csv(joined, path = './Drug_Overdose_App/cleaned_data.csv')
runApp('Drug_Overdose_App')
data %>% filter(Location != `United States`) %>% ggroup_by(Location, `Rate Type`)
data %>% filter(Location != "United States") %>% ggroup_by(Location, `Rate Type`)
data %>% filter(Location != "United States") %>% group_by(Location, `Rate Type`)
data %>% filter(Location != "United States") %>% group_by(Location)
data %>% filter(Location != "United States") %>% group_by(Location, `Rate Type`)
data %>% filter(Location != "United States") %>% group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot()
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot()
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose", Year = 2009) %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose", Year == 2009) %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
runApp('Drug_Overdose_App')
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_fill_brewer( palette = "Purples")
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_fill_brewer( palette = "Greens")
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
scale_fill_manual( values = "orange")
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
data %>%  filter(Location != "California", `Rate Type` == "Opioid Overdose")
data %>%  filter(Location == "California", `Rate Type` == "Opioid Overdose")
data %>%  filter(Location == "California", `Rate Type` == "Opioid Overdose")
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none") +
ggtitle('Box Plot of Opioid Overdose Death Rates for all 50 states')
data %>% filter(Location != "United States", `Rate Type` == "Opioid Overdose") %>%
group_by(Location, `Rate Type`) %>%
ggplot(aes(x = Location, y = Rate, fill = Location)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none") +
ggtitle('Box Plot of Opioid Overdose Death Rates for all 50 states') +
ylab('Death Rates (per 100k Population)')
data %>% filter(Location = "North Dakota", `Rate Type` == "Opioid Overdose")
data %>% filter(Location == "North Dakota", `Rate Type` == "Opioid Overdose")
runApp('Drug_Overdose_App')
shinyUI(dashboardPage(skin = "purple",
############################################ DASHBOARD LAYOUT
dashboardHeader(
title = "Opioid Death Analysis",
titleWidth = 230
),
dashboardSidebar(
sidebarUserPanel("Creator: Suborna Nath"),
sidebarMenu(
menuItem("Overview",
tabName = "intro", icon = icon('book-reader')),
menuItem("Interactive Graphs",
tabName = 'Graphs', icon = icon('chart-line')),
menuItem("Map Visualization",
tabName = "map", icon = icon("map")),
menuItem("Data Table",
tabName = "data", icon = icon('database')),
menuItem("About Project",
tabName = "info", icon = icon("book")),
menuItem("About Me",
tabName = "Me", icon = icon("user-circle"))
)
),
############################################### FONT STYLE
dashboardBody(
tags$head(
tags$style(
HTML(
'.main-header .logo {
font-family: "Century Gothic", Century, "Century Gothic", Century;
font-weight: bold;
font-size: 17px;
}'
)
)
),
################################################# OVERVIEW
tabItems(
tabItem(tabName = "intro", h2("Overview of Yearly Overdose Death Rates in USA"),
fluidRow(
box(plotlyOutput("Graph1"), width = 6),
box(plotlyOutput("Graph2"), width = 6),
box(plotlyOutput("Graph3"), width = 12)
)
),
########################################## INTERACTIVE GRAPHS
tabItem(tabName = 'Graphs',
h2('State Level Comparison of Drug Overdose Death Rates'),
fluidRow(box(
plotlyOutput('iGraph3'), width = 9),
box(
h4('Pick a year to see death rates comparison across all states'),
selectizeInput(inputId = 'Year2',
label = 'Select a Year',
choices = YearID),
width = 3)
),
fluidRow(
box(plotlyOutput('iGraph2'), width = 9),
box( h4('These graphs compare
trends between 3 states of your choice
for "All Overdose" and "Opioid Overdose".
Pick 3 different states from the 3 drop down menus below.'),
selectizeInput(inputId = 'Location1',
label = 'Select State 1',
choices = LocationID),
selectizeInput(inputId = 'Location2',
label = 'Select State 2',
choices = LocationID),
selectizeInput(inputId = 'Location3',
label = 'Select State 3',
choices = LocationID),
width = 3),
),
fluidRow(box(
plotlyOutput('iGraph1'), width = 9),
box(
h4('Pick a state to see death rates
from 2009 - 2018.'),
selectizeInput(inputId = 'Location',
label = 'Select a State',
choices = LocationID),
width = 3)
),
),
#################################################### MAP
tabItem(
tabName = "map",
h2("Heat Map of USA Drug Overdose Death Rate from 2009 - 2018"),
fluidRow(
box(h4('Pick an year & a death rate type
to see trends across USA
for both "All Overdose" and
"Opioid Overdose" death rates.'),
selectizeInput(inputId = 'Year1',
label = 'Select an Year',
choices = YearID),
selectizeInput(inputId = 'RateType',
label = 'Select a Rate Type',
choices = Rate.TypeID),
width = 3),
infoBoxOutput("maxBox1"),
infoBoxOutput("maxBox2"),
infoBoxOutput("maxBox3"),
infoBoxOutput("maxBox4"),
box(plotlyOutput('Map2'), width = 11),
#box(plotlyOutput('Map1'), width = 11)
)
